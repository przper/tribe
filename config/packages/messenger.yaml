framework:
    messenger:
        buses:
            event.bus:
                default_middleware:
                    enabled: true
                    allow_no_handlers: true
                    allow_no_senders: true
#                middleware:
#                    - validation

        serializer:
            default_serializer: messenger.transport.symfony_serializer
            symfony_serializer:
                format: json
                context: { }

        transports:
            # sync: 'sync://'
            # async: '%env(MESSENGER_TRANSPORT_DSN)%'
            event:
                dsn: '%env(MESSENGER_RABBITMQ_TRANSPORT_DSN)%'
                serializer: Przper\Tribe\Shared\AntiCorruption\SharedEventSerializer
                options:
                    auto_setup: false
                    exchange:
                        name: events
                        type: fanout
                        default_publish_routing_key: from_external
                    queues:
                        events:
                            binding_keys: [from_external]
            # failed: 'doctrine://default?queue_name=failed'

        # Uncomment this to send failed messages to this transport for later handling.
        # failure_transport: failed

        routing:
            # Route your messages to the transports
            # 'App\Message\YourMessage': async
            Przper\Tribe\Shared\AntiCorruption\SharedEventInterface: event

# when@test:
#    framework:
#        messenger:
#            transports:
#                # replace with your transport name here (e.g., my_transport: 'in-memory://')
#                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'
